var fs = require('fs')

module.exports = WordDict

function WordDict () {
  var dictWord = []
  var fileDict = fs.createReadStream('./../dict/dict.txt')
  var path5word = [[0, 1, 2, 3, 4], [0, 1, 2, 4, 3], [0, 1, 4, 2, 3], [0, 1, 4, 3, 2], [0, 2, 1, 4, 3], [0, 2, 3, 4, 1], [0, 3, 2, 1, 4], [0, 3, 2, 4, 1], [0, 3, 4, 1, 2], [0, 3, 4, 2, 1], [1, 0, 2, 3, 4], [1, 0, 2, 4, 3], [1, 0, 3, 2, 4], [1, 0, 3, 4, 2], [1, 2, 0, 3, 4], [1, 2, 4, 3, 0], [1, 4, 2, 0, 3], [1, 4, 2, 3, 0], [1, 4, 3, 0, 2], [1, 4, 3, 2, 0], [2, 0, 1, 4, 3], [2, 0, 3, 4, 1], [2, 1, 0, 3, 4], [2, 1, 4, 3, 0], [2, 3, 0, 1, 4], [2, 3, 4, 1, 0], [2, 4, 1, 0, 3], [2, 4, 3, 0, 1], [3, 0, 1, 2, 4], [3, 0, 1, 4, 2], [3, 0, 2, 1, 4], [3, 0, 2, 4, 1], [3, 2, 0, 1, 4], [3, 2, 4, 1, 0], [3, 4, 1, 0, 2], [3, 4, 1, 2, 0], [3, 4, 2, 0, 1], [3, 4, 2, 1, 0], [4, 1, 0, 2, 3], [4, 1, 0, 3, 2], [4, 1, 2, 0, 3], [4, 1, 2, 3, 0], [4, 2, 1, 0, 3], [4, 2, 3, 0, 1], [4, 3, 0, 1, 2], [4, 3, 0, 2, 1], [4, 3, 2, 0, 1], [4, 3, 2, 1, 0]]
  var len5word = 48
  var path6word = [[0, 1, 2, 5, 4, 3], [0, 3, 4, 1, 2, 5], [0, 3, 4, 5, 2, 1], [1, 0, 3, 4, 5, 2], [1, 2, 5, 4, 3, 0], [2, 1, 0, 3, 4, 5], [2, 5, 4, 1, 0, 3], [2, 5, 4, 3, 0, 1], [3, 0, 1, 2, 5, 4], [3, 0, 1, 4, 5, 2], [3, 4, 5, 2, 1, 0], [4, 3, 0, 1, 2, 5], [4, 5, 2, 1, 0, 3], [5, 2, 1, 0, 3, 4], [5, 2, 1, 4, 3, 0], [5, 4, 3, 0, 1, 2]]
  var len6word = 16
  var path7word = [[0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 6, 5, 4], [0, 1, 2, 6, 3, 4, 5], [0, 1, 2, 6, 3, 5, 4], [0, 1, 2, 6, 5, 3, 4], [0, 1, 2, 6, 5, 4, 3], [0, 1, 3, 2, 6, 5, 4], [0, 1, 3, 4, 5, 6, 2], [0, 3, 1, 2, 6, 5, 4], [0, 3, 4, 5, 6, 2, 1], [0, 4, 3, 1, 2, 6, 5], [0, 4, 3, 5, 6, 2, 1], [0, 4, 5, 3, 1, 2, 6], [0, 4, 5, 3, 6, 2, 1], [0, 4, 5, 6, 2, 1, 3], [0, 4, 5, 6, 2, 3, 1], [0, 4, 5, 6, 3, 1, 2], [0, 4, 5, 6, 3, 2, 1], [1, 0, 3, 2, 6, 5, 4], [1, 0, 3, 4, 5, 6, 2], [1, 0, 4, 3, 2, 6, 5], [1, 0, 4, 3, 5, 6, 2], [1, 0, 4, 5, 3, 2, 6], [1, 0, 4, 5, 3, 6, 2], [1, 0, 4, 5, 6, 2, 3], [1, 0, 4, 5, 6, 3, 2], [1, 2, 3, 0, 4, 5, 6], [1, 2, 3, 6, 5, 4, 0], [1, 2, 6, 3, 0, 4, 5], [1, 2, 6, 3, 5, 4, 0], [1, 2, 6, 5, 3, 0, 4], [1, 2, 6, 5, 3, 4, 0], [1, 2, 6, 5, 4, 0, 3], [1, 2, 6, 5, 4, 3, 0], [1, 3, 0, 4, 5, 6, 2], [1, 3, 2, 6, 5, 4, 0], [2, 1, 0, 3, 4, 5, 6], [2, 1, 0, 3, 6, 5, 4], [2, 1, 0, 4, 3, 5, 6], [2, 1, 0, 4, 3, 6, 5], [2, 1, 0, 4, 5, 3, 6], [2, 1, 0, 4, 5, 6, 3], [2, 1, 3, 0, 4, 5, 6], [2, 1, 3, 6, 5, 4, 0], [2, 3, 1, 0, 4, 5, 6], [2, 3, 6, 5, 4, 0, 1], [2, 6, 3, 1, 0, 4, 5], [2, 6, 3, 5, 4, 0, 1], [2, 6, 5, 3, 1, 0, 4], [2, 6, 5, 3, 4, 0, 1], [2, 6, 5, 4, 0, 1, 3], [2, 6, 5, 4, 0, 3, 1], [2, 6, 5, 4, 3, 0, 1], [2, 6, 5, 4, 3, 1, 0], [3, 0, 1, 2, 6, 5, 4], [3, 0, 4, 5, 6, 2, 1], [3, 1, 0, 4, 5, 6, 2], [3, 1, 2, 6, 5, 4, 0], [3, 2, 1, 0, 4, 5, 6], [3, 2, 6, 5, 4, 0, 1], [3, 4, 0, 1, 2, 6, 5], [3, 4, 5, 6, 2, 1, 0], [3, 5, 4, 0, 1, 2, 6], [3, 5, 6, 2, 1, 0, 4], [3, 6, 2, 1, 0, 4, 5], [3, 6, 5, 4, 0, 1, 2], [4, 0, 1, 2, 3, 5, 6], [4, 0, 1, 2, 3, 6, 5], [4, 0, 1, 2, 6, 3, 5], [4, 0, 1, 2, 6, 5, 3], [4, 0, 1, 3, 2, 6, 5], [4, 0, 1, 3, 5, 6, 2], [4, 0, 3, 1, 2, 6, 5], [4, 0, 3, 5, 6, 2, 1], [4, 3, 0, 1, 2, 6, 5], [4, 3, 5, 6, 2, 1, 0], [4, 5, 3, 0, 1, 2, 6], [4, 5, 3, 6, 2, 1, 0], [4, 5, 6, 2, 1, 0, 3], [4, 5, 6, 2, 1, 3, 0], [4, 5, 6, 2, 3, 0, 1], [4, 5, 6, 2, 3, 1, 0], [4, 5, 6, 3, 0, 1, 2], [4, 5, 6, 3, 2, 1, 0], [5, 3, 4, 0, 1, 2, 6], [5, 3, 6, 2, 1, 0, 4], [5, 4, 0, 1, 2, 3, 6], [5, 4, 0, 1, 2, 6, 3], [5, 4, 0, 1, 3, 2, 6], [5, 4, 0, 1, 3, 6, 2], [5, 4, 0, 3, 1, 2, 6], [5, 4, 0, 3, 6, 2, 1], [5, 4, 3, 0, 1, 2, 6], [5, 4, 3, 6, 2, 1, 0], [5, 6, 2, 1, 0, 3, 4], [5, 6, 2, 1, 0, 4, 3], [5, 6, 2, 1, 3, 0, 4], [5, 6, 2, 1, 3, 4, 0], [5, 6, 2, 3, 1, 0, 4], [5, 6, 2, 3, 4, 0, 1], [5, 6, 3, 2, 1, 0, 4], [5, 6, 3, 4, 0, 1, 2], [6, 2, 1, 0, 3, 4, 5], [6, 2, 1, 0, 3, 5, 4], [6, 2, 1, 0, 4, 3, 5], [6, 2, 1, 0, 4, 5, 3], [6, 2, 1, 3, 0, 4, 5], [6, 2, 1, 3, 5, 4, 0], [6, 2, 3, 1, 0, 4, 5], [6, 2, 3, 5, 4, 0, 1], [6, 3, 2, 1, 0, 4, 5], [6, 3, 5, 4, 0, 1, 2], [6, 5, 3, 2, 1, 0, 4], [6, 5, 3, 4, 0, 1, 2], [6, 5, 4, 0, 1, 2, 3], [6, 5, 4, 0, 1, 3, 2], [6, 5, 4, 0, 3, 1, 2], [6, 5, 4, 0, 3, 2, 1], [6, 5, 4, 3, 0, 1, 2], [6, 5, 4, 3, 2, 1, 0]]
  var len7word = 120
  var path8word = [[0, 1, 2, 4, 3, 5, 6, 7], [0, 1, 2, 4, 7, 6, 5, 3], [0, 3, 5, 6, 1, 2, 4, 7], [0, 3, 5, 6, 7, 4, 2, 1], [1, 0, 3, 5, 6, 7, 4, 2], [1, 2, 4, 7, 6, 5, 3, 0], [2, 1, 0, 3, 4, 7, 6, 5], [2, 1, 0, 3, 5, 6, 7, 4], [2, 4, 7, 6, 1, 0, 3, 5], [2, 4, 7, 6, 5, 3, 0, 1], [3, 0, 1, 2, 4, 7, 6, 5], [3, 5, 6, 7, 4, 2, 1, 0], [4, 2, 1, 0, 3, 5, 6, 7], [4, 7, 6, 5, 3, 0, 1, 2], [5, 3, 0, 1, 2, 4, 7, 6], [5, 3, 0, 1, 6, 7, 4, 2], [5, 6, 7, 4, 2, 1, 0, 3], [5, 6, 7, 4, 3, 0, 1, 2], [6, 5, 3, 0, 1, 2, 4, 7], [6, 7, 4, 2, 1, 0, 3, 5], [7, 4, 2, 1, 0, 3, 5, 6], [7, 4, 2, 1, 6, 5, 3, 0], [7, 6, 5, 3, 0, 1, 2, 4], [7, 6, 5, 3, 4, 2, 1, 0]]
  var len8word = 24
  var path9word = [[0, 1, 2, 5, 4, 3, 6, 7, 8], [0, 1, 2, 5, 8, 7, 4, 3, 6], [0, 1, 2, 5, 8, 7, 6, 3, 4], [0, 1, 4, 3, 6, 7, 8, 5, 2], [0, 3, 4, 1, 2, 5, 8, 7, 6], [0, 3, 6, 7, 4, 1, 2, 5, 8], [0, 3, 6, 7, 8, 5, 2, 1, 4], [0, 3, 6, 7, 8, 5, 4, 1, 2], [2, 1, 0, 3, 4, 5, 8, 7, 6], [2, 1, 0, 3, 6, 7, 4, 5, 8], [2, 1, 0, 3, 6, 7, 8, 5, 4], [2, 1, 4, 5, 8, 7, 6, 3, 0], [2, 5, 4, 1, 0, 3, 6, 7, 8], [2, 5, 8, 7, 4, 1, 0, 3, 6], [2, 5, 8, 7, 6, 3, 0, 1, 4], [2, 5, 8, 7, 6, 3, 4, 1, 0], [4, 1, 0, 3, 6, 7, 8, 5, 2], [4, 1, 2, 5, 8, 7, 6, 3, 0], [4, 3, 0, 1, 2, 5, 8, 7, 6], [4, 3, 6, 7, 8, 5, 2, 1, 0], [4, 5, 2, 1, 0, 3, 6, 7, 8], [4, 5, 8, 7, 6, 3, 0, 1, 2], [4, 7, 6, 3, 0, 1, 2, 5, 8], [4, 7, 8, 5, 2, 1, 0, 3, 6], [6, 3, 0, 1, 2, 5, 4, 7, 8], [6, 3, 0, 1, 2, 5, 8, 7, 4], [6, 3, 0, 1, 4, 7, 8, 5, 2], [6, 3, 4, 7, 8, 5, 2, 1, 0], [6, 7, 4, 3, 0, 1, 2, 5, 8], [6, 7, 8, 5, 2, 1, 0, 3, 4], [6, 7, 8, 5, 2, 1, 4, 3, 0], [6, 7, 8, 5, 4, 3, 0, 1, 2], [8, 5, 2, 1, 0, 3, 4, 7, 6], [8, 5, 2, 1, 0, 3, 6, 7, 4], [8, 5, 2, 1, 4, 7, 6, 3, 0], [8, 5, 4, 7, 6, 3, 0, 1, 2], [8, 7, 4, 5, 2, 1, 0, 3, 6], [8, 7, 6, 3, 0, 1, 2, 5, 4], [8, 7, 6, 3, 0, 1, 4, 5, 2], [8, 7, 6, 3, 4, 5, 2, 1, 0]]
  var len9word = 40
  this.read = function (callback) {
    console.log('read')

    this.readLines(fileDict, callback)
  }

  this.readLines = function (input, callback) {
    var remaining = ''

    input.on('data', function (data) {
      remaining += data
      var index = remaining.indexOf('\n')
      while (index > -1) {
        var line = remaining.substring(0, index)
        remaining = remaining.substring(index + 1)

        dictWord.push(line)

        index = remaining.indexOf('\n')
      }
    })

    input.on('end', function () {
      if (remaining.length > 0) {
        dictWord.push(remaining)
        console.log('finish')
        callback()
      }
    })
  }

  /**
 * choose a random word  from dict
 *
 * @return {string} word
 */
  this.getWord = function () {
    var r = Math.floor(Math.random() * (dictWord.length))

    return dictWord[r]
  }

  this.createQuestion = function (answer) {
    if (answer.length < 5) {
      var a = answer.split(''),
        n = a.length

      for (var i = n - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1))
        var tmp = a[i]
        a[i] = a[j]
        a[j] = tmp
      }
      return a.join('')
    }else if (answer.length == 5) {
      var s = ''
      var line = Math.floor(Math.random() * len5word)
      
      for (var i = 0; i < 5; i++) {
        
        s = s + answer[path5word[line][i]]
      }
      return s
    }else if (answer.length == 6) {
      var s = ''
      var line = Math.floor(Math.random() * len6word)
      
      for (var i = 0; i < 6; i++) {
       
        s = s + answer[path6word[line][i]]
      }
      return s
    }else if (answer.length == 7) {
      var s = ''
      var line = Math.floor(Math.random() * len7word)
     
      for (var i = 0; i < 7; i++) {
      
        s = s + answer[path7word[line][i]]
      }
      return s
    }else if (answer.length == 8) {
      var s = ''
      var line =Math.floor( Math.random() * len8word)
   
      for (var i = 0; i < 8; i++) {
       
        s = s + answer[path8word[line][i]]
      }
      return s
    }else if (answer.length == 9) {
      var s = ''
      var line = Math.floor(Math.random() * len9word)
      
      for (var i = 0; i < 9; i++) {
       
        s = s + answer[path9word[line][i]]
      }
      return s
    }else {
      var a = answer.split(''),
        n = a.length

      for (var i = n - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1))
        var tmp = a[i]
        a[i] = a[j]
        a[j] = tmp
      }
      return a.join('')
    }
  }
}
